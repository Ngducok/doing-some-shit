local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

function Library:CreateWindow(windowConfig)
    windowConfig = windowConfig or {}
    local WindowName = windowConfig.Name or "Window"
    
    -- Main GUI Components
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local TopBar = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local Container = Instance.new("Frame")
    local SectionList = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local ContentArea = Instance.new("Frame")
    
    -- Setup ScreenGui
    ScreenGui.Name = "UILibrary"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Setup MainFrame
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
    MainFrame.Size = UDim2.new(0, 500, 0, 300)
    MainFrame.ClipsDescendants = true
    
    UICorner.CornerRadius = UDim.new(0, 6)
    UICorner.Parent = MainFrame
    
    -- Setup TopBar
    TopBar.Name = "TopBar"
    TopBar.Parent = MainFrame
    TopBar.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    
    Title.Name = "Title"
    Title.Parent = TopBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.Size = UDim2.new(1, -20, 1, 0)
    Title.Font = Enum.Font.GothamBold
    Title.Text = WindowName
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Setup Container
    Container.Name = "Container"
    Container.Parent = MainFrame
    Container.BackgroundTransparency = 1
    Container.Position = UDim2.new(0, 0, 0, 30)
    Container.Size = UDim2.new(1, 0, 1, -30)
    
    -- Setup Section List
    SectionList.Name = "SectionList"
    SectionList.Parent = Container
    SectionList.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    SectionList.Size = UDim2.new(0, 120, 1, 0)
    
    UIListLayout.Parent = SectionList
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 2)
    
    -- Setup Content Area
    ContentArea.Name = "ContentArea"
    ContentArea.Parent = Container
    ContentArea.BackgroundTransparency = 1
    ContentArea.Position = UDim2.new(0, 120, 0, 0)
    ContentArea.Size = UDim2.new(1, -120, 1, 0)
    
    -- Dragging Functionality
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function updateDrag(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateDrag(input)
        end
    end)
    
    local Window = {}
    
    function Window:CreateSection(name)
        local Section = {}
        
        -- Create Section Button
        local SectionButton = Instance.new("TextButton")
        local SectionContent = Instance.new("Frame")
        
        SectionButton.Name = name
        SectionButton.Parent = SectionList
        SectionButton.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        SectionButton.Size = UDim2.new(1, 0, 0, 30)
        SectionButton.Font = Enum.Font.Gotham
        SectionButton.Text = name
        SectionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        SectionButton.TextSize = 14
        
        SectionContent.Name = name.."Content"
        SectionContent.Parent = ContentArea
        SectionContent.BackgroundTransparency = 1
        SectionContent.Size = UDim2.new(1, 0, 1, 0)
        SectionContent.Visible = false
        
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = SectionContent
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)
        
        -- Section Button Click Handler
        SectionButton.MouseButton1Click:Connect(function()
            for _, content in pairs(ContentArea:GetChildren()) do
                if content:IsA("Frame") then
                    content.Visible = false
                end
            end
            SectionContent.Visible = true
        end)
        
        function Section:CreateButton(buttonConfig)
            local Button = Instance.new("TextButton")
            
            Button.Name = buttonConfig.Name or "Button"
            Button.Parent = SectionContent
            Button.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            Button.Size = UDim2.new(1, -20, 0, 30)
            Button.Position = UDim2.new(0, 10, 0, 0)
            Button.Font = Enum.Font.Gotham
            Button.Text = buttonConfig.Name or "Button"
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Button
            
            Button.MouseButton1Click:Connect(buttonConfig.Callback or function() end)
            
            return Button
        end
        
        function Section:CreateSlider(sliderConfig)
            local SliderContainer = Instance.new("Frame")
            local SliderLabel = Instance.new("TextLabel")
            local SliderFrame = Instance.new("Frame")
            local SliderValue = Instance.new("TextLabel")
            local SliderButton = Instance.new("TextButton")
            local SliderInner = Instance.new("Frame")
            
            SliderContainer.Name = sliderConfig.Name or "Slider"
            SliderContainer.Parent = SectionContent
            SliderContainer.BackgroundTransparency = 1
            SliderContainer.Size = UDim2.new(1, -20, 0, 45)
            SliderContainer.Position = UDim2.new(0, 10, 0, 0)
            
            SliderLabel.Name = "Label"
            SliderLabel.Parent = SliderContainer
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Size = UDim2.new(1, -50, 0, 20)
            SliderLabel.Font = Enum.Font.Gotham
            SliderLabel.Text = sliderConfig.Name or "Slider"
            SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderLabel.TextSize = 14
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            SliderValue.Name = "Value"
            SliderValue.Parent = SliderContainer
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(1, -45, 0, 0)
            SliderValue.Size = UDim2.new(0, 45, 0, 20)
            SliderValue.Font = Enum.Font.Gotham
            SliderValue.Text = tostring(sliderConfig.Default or 0)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 14
            
            SliderFrame.Name = "SliderFrame"
            SliderFrame.Parent = SliderContainer
            SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
            SliderFrame.Position = UDim2.new(0, 0, 0, 25)
            SliderFrame.Size = UDim2.new(1, 0, 0, 6)
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = SliderFrame
            
            SliderInner.Name = "SliderInner"
            SliderInner.Parent = SliderFrame
            SliderInner.BackgroundColor3 = Color3.fromRGB(65, 65, 255)
            SliderInner.Size = UDim2.new(0.5, 0, 1, 0)
            
            local UICorner2 = Instance.new("UICorner")
            UICorner2.CornerRadius = UDim.new(0, 3)
            UICorner2.Parent = SliderInner
            
            SliderButton.Name = "SliderButton"
            SliderButton.Parent = SliderFrame
            SliderButton.BackgroundTransparency = 1
            SliderButton.Size = UDim2.new(1, 0, 1, 0)
            SliderButton.Text = ""
            
            -- Slider Functionality
            local min = sliderConfig.Min or 0
            local max = sliderConfig.Max or 100
            local default = sliderConfig.Default or min
            local callback = sliderConfig.Callback or function() end
            
            local function updateSlider(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SliderFrame.AbsolutePosition.X) / SliderFrame.AbsoluteSize.X, 0, 1), 0, 1, 0)
                SliderInner.Size = pos
                
                local value = math.floor(((pos.X.Scale * (max - min)) + min) * 100) / 100
                SliderValue.Text = tostring(value)
                callback(value)
            end
            
            SliderButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    local connection
                    connection = UserInputService.InputChanged:Connect(function(newinput)
                        if newinput.UserInputType == Enum.UserInputType.MouseMovement then
                            updateSlider(newinput)
                        end
                    end)
                    
                    UserInputService.InputEnded:Connect(function(newinput)
                        if newinput.UserInputType == Enum.UserInputType.MouseButton1 then
                            connection:Disconnect()
                        end
                    end)
                    
                    updateSlider(input)
                end
            end)
            
            -- Set default value
            SliderInner.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
            SliderValue.Text = tostring(default)
            callback(default)
            
            return SliderContainer
        end
        
        function Section:CreateDropdown(dropdownConfig)
            local DropdownContainer = Instance.new("Frame")
            local DropdownButton = Instance.new("TextButton")
            local DropdownList = Instance.new("Frame")
            local UIListLayout = Instance.new("UIListLayout")
            
            DropdownContainer.Name = dropdownConfig.Name or "Dropdown"
            DropdownContainer.Parent = SectionContent
            DropdownContainer.BackgroundTransparency = 1
            DropdownContainer.Size = UDim2.new(1, -20, 0, 30)
            DropdownContainer.Position = UDim2.new(0, 10, 0, 0)
            
            DropdownButton.Name = "DropdownButton"
            DropdownButton.Parent = DropdownContainer
            DropdownButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            DropdownButton.Size = UDim2.new(1, 0, 0, 30)
            DropdownButton.Font = Enum.Font.Gotham
            DropdownButton.Text = dropdownConfig.Name or "Dropdown"
            DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownButton.TextSize = 14
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = DropdownButton
            
            DropdownList.Name = "DropdownList"
            DropdownList.Parent = DropdownContainer
            DropdownList.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            DropdownList.Position = UDim2.new(0, 0, 0, 35)
            DropdownList.Size = UDim2.new(1, 0, 0, 0)
            DropdownList.ClipsDescendants = true
            DropdownList.Visible = false
            
            UIListLayout.Parent = DropdownList
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            
            local isOpen = false
            local options = dropdownConfig.Options or {}
            local callback = dropdownConfig.Callback or function() end
            
            DropdownButton.MouseButton1Click:Connect(function()
                isOpen = not isOpen
                DropdownList.Visible = isOpen
                if isOpen then
                    DropdownList.Size = UDim2.new(1, 0, 0, #options * 25)
                else
                    DropdownList.Size = UDim2.new(1, 0, 0, 0)
                end
            end)
            
            -- Create option buttons
            for i, option in ipairs(options) do
                local OptionButton = Instance.new("TextButton")
                
                OptionButton.Name = option
                OptionButton.Parent = DropdownList
                OptionButton.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
                OptionButton.Size = UDim2.new(1, 0, 0, 25)
                OptionButton.Font = Enum.Font.Gotham
                OptionButton.Text = option
                OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                OptionButton.TextSize = 14
                
                OptionButton.MouseButton1Click:Connect(function()
                    DropdownButton.Text = option
                    isOpen = false
                    DropdownList.Visible = false
                    DropdownList.Size = UDim2.new(1, 0, 0, 0)
                    callback(option)
                end)
            end
            
            return DropdownContainer
        end

        function Section:CreateTextbox(textboxConfig)
            local TextboxContainer = Instance.new("Frame")
            local TextboxLabel = Instance.new("TextLabel")
            local Textbox = Instance.new("TextBox")
            
            TextboxContainer.Name = textboxConfig.Name or "Textbox"
            TextboxContainer.Parent = SectionContent
            TextboxContainer.BackgroundTransparency = 1
            TextboxContainer.Size = UDim2.new(1, -20, 0, 45)
            TextboxContainer.Position = UDim2.new(0, 10, 0, 0)
            
            TextboxLabel.Name = "Label"
            TextboxLabel.Parent = TextboxContainer
            TextboxLabel.BackgroundTransparency = 1
            TextboxLabel.Size = UDim2.new(1, 0, 0, 20)
            TextboxLabel.Font = Enum.Font.Gotham
            TextboxLabel.Text = textboxConfig.Name or "Textbox"
            TextboxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextboxLabel.TextSize = 14
            TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            Textbox.Name = "Input"
            Textbox.Parent = TextboxContainer
            Textbox.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            Textbox.Position = UDim2.new(0, 0, 0, 25)
            Textbox.Size = UDim2.new(1, 0, 0, 30)
            Textbox.Font = Enum.Font.Gotham
            Textbox.PlaceholderText = textboxConfig.Placeholder or "Enter text..."
            Textbox.Text = textboxConfig.Default or ""
            Textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
            Textbox.TextSize = 14
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Textbox
            
            local callback = textboxConfig.Callback or function() end
            
            Textbox.FocusLost:Connect(function(enterPressed)
                if enterPressed then
                    callback(Textbox.Text)
                end
            end)
            
            return TextboxContainer
        end

        function Section:CreateToggle(toggleConfig)
            local ToggleContainer = Instance.new("Frame")
            local ToggleButton = Instance.new("TextButton")
            local ToggleInner = Instance.new("Frame")
            local ToggleLabel = Instance.new("TextLabel")
            
            ToggleContainer.Name = toggleConfig.Name or "Toggle"
            ToggleContainer.Parent = SectionContent
            ToggleContainer.BackgroundTransparency = 1
            ToggleContainer.Size = UDim2.new(1, -20, 0, 30)
            ToggleContainer.Position = UDim2.new(0, 10, 0, 0)
            
            ToggleButton.Name = "ToggleButton"
            ToggleButton.Parent = ToggleContainer
            ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
            ToggleButton.Position = UDim2.new(0, 0, 0, 5)
            ToggleButton.Size = UDim2.new(0, 20, 0, 20)
            ToggleButton.Text = ""
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = ToggleButton
            
            ToggleInner.Name = "ToggleInner"
            ToggleInner.Parent = ToggleButton
            ToggleInner.AnchorPoint = Vector2.new(0.5, 0.5)
            ToggleInner.BackgroundColor3 = Color3.fromRGB(65, 65, 255)
            ToggleInner.Position = UDim2.new(0.5, 0, 0.5, 0)
            ToggleInner.Size = UDim2.new(0, 0, 0, 0)
            
            local UICorner2 = Instance.new("UICorner")
            UICorner2.CornerRadius = UDim.new(0, 4)
            UICorner2.Parent = ToggleInner
            
            ToggleLabel.Name = "Label"
            ToggleLabel.Parent = ToggleContainer
            ToggleLabel.BackgroundTransparency = 1
            ToggleLabel.Position = UDim2.new(0, 30, 0, 0)
            ToggleLabel.Size = UDim2.new(1, -30, 1, 0)
            ToggleLabel.Font = Enum.Font.Gotham
            ToggleLabel.Text = toggleConfig.Name or "Toggle"
            ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleLabel.TextSize = 14
            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local enabled = toggleConfig.Default or false
            local callback = toggleConfig.Callback or function() end
            
            local function updateToggle()
                enabled = not enabled
                local size = enabled and UDim2.new(1, -4, 1, -4) or UDim2.new(0, 0, 0, 0)
                TweenService:Create(ToggleInner, TweenInfo.new(0.2), {Size = size}):Play()
                callback(enabled)
            end
            
            ToggleButton.MouseButton1Click:Connect(updateToggle)
            ToggleLabel.MouseButton1Click:Connect(updateToggle)
            
            -- Set default state
            if enabled then
                ToggleInner.Size = UDim2.new(1, -4, 1, -4)
            end
            
            return ToggleContainer
        end

        return Section
    end
    
    return Window
end

-- Return the library
return Library
